// <auto-generated>
// ReSharper disable RedundantUsingDirective
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable InconsistentNaming
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable RedundantNameQualifier
// TargetFrameworkVersion = 4.51
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning

using System;
using System.CodeDom.Compiler;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Data.Entity.Infrastructure;
using System.Linq.Expressions;
using System.ComponentModel.DataAnnotations.Schema;
using System.Data.Entity;
using System.Data;
using System.Data.Entity.Core.Objects;
using System.Data.SqlClient;
using System.Data.SqlTypes;
using System.Data.Entity.ModelConfiguration;
using System.Threading;
using DatabaseGeneratedOption = System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption;

namespace DDona.NewReport.Infra
{
    // Grade
    public class GradeConfiguration : EntityTypeConfiguration<Grade>
    {
        public GradeConfiguration()
            : this("dbo")
        {
        }
 
        public GradeConfiguration(string schema)
        {
            ToTable(schema + ".Grade");
            HasKey(x => new { x.Id, x.ProdutoId, x.ProdutoLojaId });

            Property(x => x.Id).HasColumnName("Id").IsRequired().HasColumnType("int").HasDatabaseGeneratedOption(DatabaseGeneratedOption.Identity);
            Property(x => x.ProdutoId).HasColumnName("ProdutoId").IsRequired().HasColumnType("int").HasDatabaseGeneratedOption(DatabaseGeneratedOption.None);
            Property(x => x.ProdutoLojaId).HasColumnName("ProdutoLojaId").IsRequired().HasColumnType("int").HasDatabaseGeneratedOption(DatabaseGeneratedOption.None);
            Property(x => x.Cor1Id).HasColumnName("Cor1Id").IsRequired().HasColumnType("int");
            Property(x => x.Cor2Id).HasColumnName("Cor2Id").IsRequired().HasColumnType("int");
            Property(x => x.Cor3Id).HasColumnName("Cor3Id").IsRequired().HasColumnType("int");
            Property(x => x.TamanhoId).HasColumnName("TamanhoId").IsRequired().HasColumnType("int");
            Property(x => x.Referencia).HasColumnName("Referencia").IsRequired().IsUnicode(false).HasColumnType("varchar").HasMaxLength(50);

            // Foreign keys
            HasRequired(a => a.Cor_Cor1Id).WithMany(b => b.Grade_Cor1Id).HasForeignKey(c => c.Cor1Id); // FK_Grade_Cor
            HasRequired(a => a.Cor_Cor2Id).WithMany(b => b.Grade_Cor2Id).HasForeignKey(c => c.Cor2Id); // FK_Grade_Cor1
            HasRequired(a => a.Cor_Cor3Id).WithMany(b => b.Grade_Cor3Id).HasForeignKey(c => c.Cor3Id); // FK_Grade_Cor2
            HasRequired(a => a.Produto).WithMany(b => b.Grade).HasForeignKey(c => new { c.ProdutoId, c.ProdutoLojaId }); // FK_Grade_Produto
            HasRequired(a => a.Tamanho).WithMany(b => b.Grade).HasForeignKey(c => c.TamanhoId); // FK_Grade_Tamanho
        }
    }

}
// </auto-generated>
